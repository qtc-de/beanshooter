#!/bin/bash

type _comp_filter &> /dev/null || return
type _comp_contains &> /dev/null || return
type _comp_filter_shorts &> /dev/null || return
type _comp_get_parameter &> /dev/null || return

function _beanshooter() {

    local cur prev words cword opts arg args gadgets value_options operations sasl_mechanisms
    _init_completion || return

    value_options="--class-name --jar-file --object-name --config --plugin --bound-name --objid-server --objid-connection"
    value_options="$value_options --username --password --export-dir --export-mlet --export-jar --stager-url --stager-port"
    value_options="$value_options --stager-host --jar --threads --username-file --password-file --sasl --class-filter"
    value_options="$value_options  --obj-filter --yso --cwd --env --output-file"

    _count_args "" "@(${value_options// /|})"
    _comp_get_parameter 3
    COMPREPLY=()

    gadgets="BeanShell1 C3P0 Clojure CommonsBeanutils1 CommonsCollections1 CommonsCollections2"
    gadgets="$gadgets CommonsCollections3 CommonsCollections4 CommonsCollections5 CommonsCollections6"
    gadgets="$gadgets CommonsCollections7 FileUpload1 Groovy1 Hibernate1 Hibernate2 JBossInterceptors1"
    gadgets="$gadgets JRMPClient JRMPListener JSON1 JavassistWeld1 Jdk7u21 Jython1 MozillaRhino1 MozillaRhino2"
    gadgets="$gadgets Myfaces1 Myfaces2 ROME Spring1 Spring2 URLDNS Vaadin1 Wicket1"

    operations="brute invoke deploy enum list serial undeploy tonka mlet tomcat"
    sasl_mechanisms="plain digest cram gssapi ntlm"

    if [[ $cword -eq 1 ]]; then

        if [[ $cur == -* ]]; then
            opts="--help"
        else
            opts="$operations"
        fi

    elif [[ ${words[1]} == "brute" ]]; then

        if _comp_contains "--config --plugin --username-file --password-file" $prev; then
            _filedir
            return 0

        elif _comp_contains "--sasl" $prev; then
            opts="${sasl_mechanisms}"

        elif _comp_contains "--threads --username --password --bound-name --objid-server" $prev; then
            return 0

        elif [[ $cur == -* ]] || [[ $args -ge 4 ]]; then
            opts="--help"
            opts="$opts --threads"
            opts="$opts --username"
            opts="$opts --password"
            opts="$opts --username-file"
            opts="$opts --password-file"
            opts="$opts --no-progress"
            opts="$opts --config"
            opts="$opts --verbose"
            opts="$opts --plugin"
            opts="$opts --no-color"
            opts="$opts --stack-trace"
            opts="$opts --bound-name"
            opts="$opts --objid-server"
            opts="$opts --follow"
            opts="$opts --ssl"
            opts="$opts --jmxmp"
            opts="$opts --sasl"
        else
            return 0
        fi


    elif [[ ${words[1]} == "invoke" ]]; then

        if _comp_contains "--config --plugin" $prev; then
            _filedir
            return 0

        elif _comp_contains "--sasl" $prev; then
            opts="${sasl_mechanisms}"

        elif _comp_contains "--bound-name --objid-server --objid-connection" $prev; then
            return 0

        elif [[ $cur == -* ]] || [[ $args -ge 7 ]]; then
            opts="--help"
            opts="$opts --literal"
            opts="$opts --config"
            opts="$opts --verbose"
            opts="$opts --plugin"
            opts="$opts --no-color"
            opts="$opts --stack-trace"
            opts="$opts --bound-name"
            opts="$opts --objid-server"
            opts="$opts --objid-connection"
            opts="$opts --follow"
            opts="$opts --ssl"
            opts="$opts --jmxmp"
            opts="$opts --username"
            opts="$opts --password"
            opts="$opts --sasl"

        else
            return 0
        fi


    elif [[ ${words[1]} == "deploy" ]]; then

        if _comp_contains "--config --plugin" $prev; then
            _filedir
            return 0

        elif _comp_contains "--stager-host" $prev; then
            _ip_addresses
            return 0

        elif _comp_contains "--stager-url" $prev; then
            opts="http:// file:// ftp://"
            compopt -o nospace

        elif _comp_contains "--sasl" $prev; then
            opts="${sasl_mechanisms}"

        elif _comp_contains "--username --password --stager-port --bound-name --objid-server --objid-connection" $prev; then
            return 0

        elif [[ $cur == -* ]] || [[ $args -ge 6 ]]; then
            opts="--help"
            opts="$opts --stager-only"
            opts="$opts --no-stager"
            opts="$opts --stager-url"
            opts="$opts --stager-port"
            opts="$opts --stager-host"
            opts="$opts --config"
            opts="$opts --verbose"
            opts="$opts --plugin"
            opts="$opts --no-color"
            opts="$opts --stack-trace"
            opts="$opts --bound-name"
            opts="$opts --objid-server"
            opts="$opts --objid-connection"
            opts="$opts --follow"
            opts="$opts --ssl"
            opts="$opts --jmxmp"
            opts="$opts --username"
            opts="$opts --password"
            opts="$opts --sasl"
            opts="$opts --jar"

        else
            return 0
        fi


    elif [[ ${words[1]} == "enum" ]]; then

        if _comp_contains "--config --plugin" $prev; then
            _filedir
            return 0

        elif _comp_contains "--sasl" $prev; then
            opts="${sasl_mechanisms}"

        elif _comp_contains "--username --password --bound-name --objid-server --objid-connection" $prev; then
            return 0

        elif [[ $cur == -* ]] || [[ $args -ge 4 ]]; then
            opts="--help"
            opts="$opts --config"
            opts="$opts --verbose"
            opts="$opts --plugin"
            opts="$opts --no-color"
            opts="$opts --stack-trace"
            opts="$opts --bound-name"
            opts="$opts --objid-server"
            opts="$opts --objid-connection"
            opts="$opts --follow"
            opts="$opts --sasl"
            opts="$opts --ssl"
            opts="$opts --jmxmp"
            opts="$opts --username"
            opts="$opts --password"

        else
            return 0
        fi


    elif [[ ${words[1]} == "list" ]]; then

        if _comp_contains "--config --plugin" $prev; then
            _filedir
            return 0

        elif _comp_contains "--sasl" $prev; then
            opts="${sasl_mechanisms}"

        elif _comp_contains "--class-filter --obj-filter --username --password --bound-name --objid-server --objid-connection" $prev; then
            return 0

        elif [[ $cur == -* ]] || [[ $args -ge 4 ]]; then
            opts="--help"
            opts="$opts --class-filter"
            opts="$opts --obj-filter"
            opts="$opts --config"
            opts="$opts --verbose"
            opts="$opts --plugin"
            opts="$opts --no-color"
            opts="$opts --stack-trace"
            opts="$opts --bound-name"
            opts="$opts --objid-server"
            opts="$opts --objid-connection"
            opts="$opts --follow"
            opts="$opts --ssl"
            opts="$opts --jmxmp"
            opts="$opts --username"
            opts="$opts --password"

        else
            return 0
        fi


    elif [[ ${words[1]} == "serial" ]]; then

        if _comp_contains "--config --plugin --yso" $prev; then
            _filedir
            return 0

        elif _comp_contains "--sasl" $prev; then
            opts="${sasl_mechanisms}"

        elif _comp_contains "--username --password --bound-name --objid-server --objid-connection" $prev; then
            return 0

        elif [[ $cur == -* ]] || [[ $args -ge 6 ]]; then
            opts="--help"
            opts="$opts --preauth"
            opts="$opts --yso"
            opts="$opts --config"
            opts="$opts --verbose"
            opts="$opts --plugin"
            opts="$opts --no-color"
            opts="$opts --stack-trace"
            opts="$opts --bound-name"
            opts="$opts --objid-server"
            opts="$opts --objid-connection"
            opts="$opts --follow"
            opts="$opts --ssl"
            opts="$opts --jmxmp"
            opts="$opts --username"
            opts="$opts --password"
            opts="$opts --sasl"

        elif [[ $args -eq 4 ]]; then
            opts="$gadgets"

        else
            return 0
        fi


    elif [[ ${words[1]} == "undeploy" ]]; then

        if _comp_contains "--config --plugin" $prev; then
            _filedir
            return 0

        elif _comp_contains "--sasl" $prev; then
            opts="${sasl_mechanisms}"

        elif _comp_contains "--username --password --bound-name --objid-server --objid-connection" $prev; then
            return 0

        elif [[ $cur == -* ]] || [[ $args -ge 5 ]]; then
            opts="--help"
            opts="$opts --config"
            opts="$opts --verbose"
            opts="$opts --plugin"
            opts="$opts --no-color"
            opts="$opts --stack-trace"
            opts="$opts --bound-name"
            opts="$opts --objid-server"
            opts="$opts --objid-connection"
            opts="$opts --follow"
            opts="$opts --ssl"
            opts="$opts --jmxmp"
            opts="$opts --username"
            opts="$opts --password"
            opts="$opts --sasl"

        else
            return 0
        fi
    fi

    _comp_filter "opts"
    _comp_filter_shorts "opts"

	mapfile -t COMPREPLY < <(compgen -W "${opts}" -- "${cur}") 
	return 0
}

complete -F _beanshooter beanshooter
