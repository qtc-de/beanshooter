#!/bin/bash

type _comp_filter &> /dev/null || return
type _comp_contains &> /dev/null || return
type _comp_filter_shorts &> /dev/null || return

function _jmx-exploiter() {

    local cur prev words cword opts args
    _init_completion || return

    _count_args "" "@(-c|--config|-b|--bound-name|-e|--exec|-p|--password|-rs|--remote-stager|--sasl|-sh|--stager-host|-sp|--stager-port|-u|--username|--yso)"
    COMPREPLY=()

    gadgets="BeanShell1 C3P0 Clojure CommonsBeanutils1 CommonsCollections1 CommonsCollections2"
    gadgets="$gadgets CommonsCollections3 CommonsCollections4 CommonsCollections5 CommonsCollections6"
    gadgets="$gadgets CommonsCollections7 FileUpload1 Groovy1 Hibernate1 Hibernate2 JBossInterceptors1"
    gadgets="$gadgets JRMPClient JRMPListener JSON1 JavassistWeld1 Jdk7u21 Jython1 MozillaRhino1 MozillaRhino2"
    gadgets="$gadgets Myfaces1 Myfaces2 ROME Spring1 Spring2 URLDNS Vaadin1 Wicket1"

    # If the cursor is at the last word
    if [[ $(($cword+1)) -eq ${#words[@]} ]]; then

        # If only host was specified so far - complete nothing
        if [[ $args -eq 2 ]]; then
            return 0

        # If host and port are specified - complete actions
        elif [[ $args -eq 3 ]]; then
            opts="status deployAll deployMLet deployMBean undeployAll undeployMLet undeployMBean execute executeBackground ping ysoserial"
            mapfile -t COMPREPLY < <(compgen -W "${opts}" -- "${cur}") 
            return 0

        # If host, port and action are specified - complete depending on action
        elif [[ $args -eq 4 ]]; then

            # If action expects a command, complete nothing
            if _comp_contains "execute executeBackground" $prev; then
                return 0

            # If action expects an gadget, complete gadgets
            elif _comp_contains "ysoserial" $prev; then
                opts=$gadgets
                mapfile -t COMPREPLY < <(compgen -W "${opts}" -- "${cur}") 
                return 0
            fi

        # If host, port, action and another argument was specified and the previous word is a gadget - complete nothing
        elif [[ $args -eq 5 ]] || _comp_contains $gadgets $prev; then
            return 0
        fi

    fi

    # File completion for config files and yso option
	if _comp_contains "-c --config --yso" $prev; then
        _filedir
		return 0

    # IP completion for stager host
	elif _comp_contains "-sh --stager-host" $prev; then
        _ip_addresses
        return 0

    # Mechanism completion for SASL
	elif [[ $prev = "--sasl" ]]; then
        opts="NTLM PLAIN GSSAPI CRAM-MD5 DIGEST-MD5"

    # No completion
	elif _comp_contains "--bound-name --exec --password --stager-port --username" $prev; then
		return 0

	else 
		opts="-b --bound-name"
		opts="$opts -c --config"
		opts="$opts -e --exec"
		opts="$opts --follow"
		opts="$opts --help"
		opts="$opts -j --jmxmp"
		opts="$opts -p --password"
		opts="$opts -rs --remote-stager"
		opts="$opts --sasl"
		opts="$opts -sh --stager-host"
		opts="$opts -so --stager-only"
		opts="$opts -sp --stager-port"
		opts="$opts --ssl"
		opts="$opts -u --username"
	fi

    _comp_filter "opts"
    _comp_filter_shorts "opts"

	mapfile -t COMPREPLY < <(compgen -W "${opts}" -- "${cur}") 
	return 0
}

complete -F _jmx-exploiter jmx-exploiter
