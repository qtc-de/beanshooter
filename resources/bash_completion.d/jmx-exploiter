#!/bin/bash

type _comp_filter &> /dev/null || return
type _comp_contains &> /dev/null || return
type _comp_filter_shorts &> /dev/null || return

function _jmx-exploiter() {

    local cur prev words cword opts args
    _init_completion || return

    _count_args "" "@(-c|--config|-b|--boundName|-e|--exec|-p|--password|-rs|--remoteStager|-sh|--stagerHost|-sp|--stagerPort|-u|--username)"
    COMPREPLY=()

    # If the cursor is at the last word
    if [[ $(($cword+1)) -eq ${#words[@]} ]]; then

        # If only host was specified so far or host, port and action was specified - complete nothing
        if [[ $args -eq 2 || $args -gt 3 ]]; then
            return 0

        # If host and port are specified - complete actions
        elif [[ $args -eq 3 ]]; then
            opts="status deployAll deployMLet deployMBean undeployAll undeployMLet undeployMBean execute executeBackground ping"
            mapfile -t COMPREPLY < <(compgen -W "${opts}" -- "${cur}") 
            return 0
        fi

    fi

    # File completion for config files
	if _comp_contains "-c --config" $prev; then
        _filedir
		return 0

    # IP completion for stager host
	elif _comp_contains "-sh --stagerHost" $prev; then
        _ip_addresses
        return 0

    # No completion
	elif _comp_contains "--boundName --exec --password --stagerPort --username" $prev; then
		return 0

	else 
		opts="-b --boundName"
		opts="$opts -c --config"
		opts="$opts -e --exec"
		opts="$opts --follow"
		opts="$opts -j --jmxmp"
		opts="$opts -p --password"
		opts="$opts -rs --remoteStager"
		opts="$opts -sh --stagerHost"
		opts="$opts -so --stagerOnly"
		opts="$opts -sp --stagerPort"
		opts="$opts --ssl"
		opts="$opts -u --username"
	fi

    _comp_filter "opts"
    _comp_filter_shorts "opts"

	mapfile -t COMPREPLY < <(compgen -W "${opts}" -- "${cur}") 
	return 0
}

complete -F _jmx-exploiter jmx-exploiter
